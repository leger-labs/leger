name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0-test)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build RPM (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            goarch: amd64
            rpm_arch: x86_64
          - arch: arm64
            goarch: arm64
            rpm_arch: aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          VERSION_SHORT="${VERSION#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_short=${VERSION_SHORT}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest

      - name: Build binaries
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          COMMIT="${{ github.sha }}"
          BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          go build -trimpath \
            -ldflags="-X github.com/leger-labs/leger/internal/version.Version=${VERSION} \
                      -X github.com/leger-labs/leger/internal/version.Commit=${COMMIT} \
                      -X github.com/leger-labs/leger/internal/version.BuildDate=${BUILD_DATE} \
                      -w -s" \
            -o leger-${{ matrix.arch }} \
            ./cmd/leger

          go build -trimpath \
            -ldflags="-X github.com/leger-labs/leger/internal/version.Version=${VERSION} \
                      -X github.com/leger-labs/leger/internal/version.Commit=${COMMIT} \
                      -X github.com/leger-labs/leger/internal/version.BuildDate=${BUILD_DATE} \
                      -w -s" \
            -o legerd-${{ matrix.arch }} \
            ./cmd/legerd

      - name: Create RPM
        env:
          VERSION: ${{ steps.version.outputs.version_short }}
          RPM_ARCH: ${{ matrix.rpm_arch }}
          CLI_BINARY: leger-${{ matrix.arch }}
          DAEMON_BINARY: legerd-${{ matrix.arch }}
        run: |
          nfpm pkg --packager rpm -f nfpm.yaml

      - name: Import GPG key
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          # Trust the imported key
          KEY_ID=$(gpg --list-keys --with-colons packages@leger.run | awk -F: '/^pub:/ {print $5}')
          echo "${KEY_ID}:6:" | gpg --import-ownertrust

      - name: Sign RPM
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          # Configure rpm macros for signing
          cat > ~/.rpmmacros <<EOF
          %_signature gpg
          %_gpg_name packages@leger.run
          EOF

          # Sign all RPMs
          for rpm in *.rpm; do
            if [ -f "$rpm" ]; then
              echo "Signing $rpm..."
              rpmsign --addsign "$rpm"
              # Verify signature
              rpm --checksig "$rpm"
            fi
          done

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-${{ matrix.arch }}
          path: "*.rpm"
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize RPMs
        run: |
          mkdir -p rpms
          find artifacts -type f -name "*.rpm" -exec cp {} rpms/ \;

      - name: Generate release notes
        run: |
          cat > release-notes.md <<'NOTES'
          ## Installation

          Download the appropriate RPM:
          - **x86_64**: `leger-*-x86_64.rpm`
          - **aarch64**: `leger-*-aarch64.rpm`
```bash
          sudo dnf install ./leger-*.rpm
```

          ## Configuration

          Edit `/etc/leger/config.yaml`, then start:
```bash
          systemctl --user enable --now legerd.service
```

          ## Verification
```bash
          leger --version
          systemctl --user status legerd.service
```
          NOTES

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          files: rpms/*.rpm
          body_path: release-notes.md
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to R2 Repository
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize RPMs
        run: |
          mkdir -p rpms
          find artifacts -type f -name "*.rpm" -exec cp {} rpms/ \;
          ls -lh rpms/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y createrepo-c awscli

      - name: Export GPG public key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --armor --export packages@leger.run > leger-rpm-signing.public.asc

      - name: Publish to R2
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          PUBLIC_URL: https://pkgs.leger.run
          RPMS_DIR: ./rpms
        run: |
          chmod +x scripts/publish-rpm.sh
          ./scripts/publish-rpm.sh

      - name: Summary
        run: |
          echo "## RPM Repository Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Repository URL: https://pkgs.leger.run/fedora" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Installation instructions:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "sudo dnf config-manager --add-repo https://pkgs.leger.run/fedora/leger.repo" >> $GITHUB_STEP_SUMMARY
          echo "sudo dnf install leger" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
